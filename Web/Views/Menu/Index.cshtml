@model Infrastructure.Crosscutting.Security.Model.SysMenu
@{
    ViewBag.Title = "菜单管理";
    this.Layout = "~/Views/Shared/IndexTemp.cshtml";
}

@section scriptsHeader
 {
    <script src="~/Scripts/eayuiExtend/formExtend.js"></script>
    <script src="~/Scripts/eayuiExtend/datagridExtend.js"></script>
}

@section stylesHeader
{
    <style>
        table tr td {
            padding: 3px 6px;
        }

        .errMsg {
            text-align: center;
        }

        #fm {
            margin: 0;
            padding: 10px 30px;
        }

        .ftitle {
            font-size: 14px;
            font-weight: bold;
            padding: 5px 0;
            margin-bottom: 10px;
            border-bottom: 1px solid #ccc;
        }

        .fitem {
            margin-bottom: 5px;
        }

            .fitem label {
                display: inline-block;
                width: 80px;
            }

        #IsAddButton {
            vertical-align: middle;
        }
    </style>
}

@section mainContent
{
    <div id="dlgNew" class="easyui-dialog" style="width: 600px; height: 400px; padding: 10px 20px"
        closed="true">@*buttons="#dlg-buttons"*@
        @using (Ajax.BeginForm("AddMenu", "RestApi", null, new AjaxOptions() { HttpMethod = "Post", OnSuccess = "onAddSuccess" }, new { Id = "CreateForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <fieldset>
                <legend>创建菜单</legend>
                <table>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.MenuName)：
                        </td>
                        <td>
                            @Html.EditorFor(model => model.MenuName)
                        </td>
                        <td>
                            @Html.LabelFor(model => model.MenuLink)：
                        </td>
                        <td>
                            @Html.EditorFor(model => model.MenuLink)
                        </td>
                    </tr>
                    <tr class="errMsg">
                        <td colspan="2">
                            @Html.ValidationMessageFor(model => model.MenuName)
                        </td>
                        <td colspan="2">
                            @Html.ValidationMessageFor(model => model.MenuLink)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.MenuOrder)：
                        </td>
                        <td>
                            @Html.EditorFor(model => model.MenuOrder)
                        </td>

                        <td>
                            @Html.LabelFor(model => model.IsVisible)：
                        </td>
                        <td>
                            @Html.RadioButtonFor(model => model.IsVisible, 1, new { @checked = true }) 启用
                            @Html.RadioButtonFor(model => model.IsVisible, 0) 禁用
                        </td>
                    </tr>

                    <tr class="errMsg">
                        <td colspan="2">
                            @Html.ValidationMessageFor(model => model.MenuOrder)
                        </td>
                        <td colspan="2">
                            @Html.ValidationMessageFor(model => model.IsVisible)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.MenuIcon)：
                        </td>
                        <td>
                            @Html.EditorFor(model => model.MenuIcon)
                        </td>

                        <td>
                            @Html.LabelFor(model => model.MenuParentId)：
                        </td>
                        <td>
                            @Html.HiddenFor(model => model.MenuParentId, new { @class = "hiddenMenuId" })
                            @Html.TextBox("txtMenu", null, new { @class = "text-box single-line txtMenuId" })
                        </td>
                    </tr>

                    <tr class="errMsg">
                        <td colspan="2">
                            @Html.ValidationMessageFor(model => model.MenuIcon)
                        </td>
                        <td colspan="2">
                            @Html.ValidationMessageFor(model => model.MenuParentId)
                        </td>
                    </tr>

                    <tr>
                        <td colspan="4">添加按钮：
                            @Html.CheckBox("CreatButton") 【新增】

                            @Html.CheckBox("EditButton") 【修改】

                            @Html.CheckBox("DeletButton") 【删除】
                        </td>
                        @*<td colspan="4">
                            @Html.CheckBox("IsAddButton") 添加【新增】【修改】【删除】按钮
                        </td>*@
                    </tr>

                    <tr>
                        <td colspan="4" style="text-align: center; padding-top: 5px;">
                            <input type="submit" value="保存" />
                            <input type="reset" value="重置" />
                        </td>
                    </tr>
                </table>

            </fieldset>
        }

    </div>

    <div id="dlgEdit" class="easyui-dialog" style="width: 600px; height: 400px; padding: 10px 20px"
        closed="true">
        @using (Ajax.BeginForm("UpdateMenu", "RestApi", null, new AjaxOptions() { HttpMethod = "Post", OnSuccess = "onEditSuccess" }, new { Id = "UpdateForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <fieldset>
                <legend>修改菜单</legend>
                @Html.HiddenFor(model => model.SysId)
                @Html.HiddenFor(model => model.IsLeaf)

                <table>
                    <tr>
                        <td>
                            @Html.LabelFor(model => model.MenuName)：
                        </td>
                        <td>
                            @Html.EditorFor(model => model.MenuName)
                        </td>
                        <td>
                            @Html.LabelFor(model => model.MenuLink)：
                        </td>
                        <td>
                            @Html.EditorFor(model => model.MenuLink)
                        </td>
                    </tr>
                    <tr class="errMsg">
                        <td colspan="2">
                            @Html.ValidationMessageFor(model => model.MenuName)
                        </td>
                        <td colspan="2">
                            @Html.ValidationMessageFor(model => model.MenuLink)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.MenuOrder)：
                        </td>
                        <td>
                            @Html.EditorFor(model => model.MenuOrder)

                        </td>

                        <td>
                            @Html.LabelFor(model => model.IsVisible)：
                        </td>
                        <td>
                            @Html.RadioButtonFor(model => model.IsVisible, 1) 启用
                            @Html.RadioButtonFor(model => model.IsVisible, 0) 禁用

                        </td>
                    </tr>

                    <tr class="errMsg">
                        <td colspan="2">
                            @Html.ValidationMessageFor(model => model.MenuOrder)
                        </td>
                        <td colspan="2">
                            @Html.ValidationMessageFor(model => model.IsVisible)
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.MenuIcon)：
                        </td>
                        <td>
                            @Html.EditorFor(model => model.MenuIcon)
                        </td>

                        <td>
                            @Html.LabelFor(model => model.MenuParentId)：
                        </td>
                        <td>
                            @Html.HiddenFor(model => model.MenuParentId, new { @class = "hiddenMenuId" })
                            @Html.TextBox("txtMenu", null, new { @class = "text-box single-line txtMenuId" })
                        </td>
                    </tr>

                    <tr class="errMsg">
                        <td colspan="2">
                            @Html.ValidationMessageFor(model => model.MenuIcon)
                        </td>
                        <td colspan="2">
                            @Html.ValidationMessageFor(model => model.MenuParentId)
                        </td>
                    </tr>
                    <tr>
                        <td colspan="4" id="buttonsTD">
                            修改按钮：
                        </td>
                    </tr>
                    <tr>
                        <td colspan="4" style="text-align: center; padding-top: 5px;">
                            <input type="submit" value="保存" />
                            <input type="reset" value="重置" />
                        </td>
                    </tr>
                </table>

            </fieldset>

        }

    </div>

    @Html.Partial("_DlgSelectMenu")
}

@section scriptsFooter
{
    <script type="text/javascript">
        $('.txtMenuId').click(function() {
            selectMenuDialog();
        });

        $("#menuTreeGrid").treegrid({
            onDblClickRow: function(row) {
                if (row != null) {
                    $('.txtMenuId').val(row.text);
                    $(".hiddenMenuId").val(row.id);
                    $('#dlgSelectMenu').dialog('close');
                }
            }
        });

        //绑定菜单数据
        $('#fixedGrid').treegrid({
            url: '@Url.Action("GetAllMenusRetTreeGrid", "RestApi")',
            idField: 'id',
            treeField: 'text',
            singleSelect: true,
            rownumbers: true,
            fit: true,
            title: '菜单列表',
            toolbar: [],
            columns: [[
                { field: 'id', title: 'ID', width: 200, hidden: true },
                { field: 'text', title: '@Html.LabelFor(model => model.MenuName)', width: 150 },
                { field: 'link', title: '@Html.LabelFor(model => model.MenuLink)', width: 150 },
                { field: 'order', title: '@Html.LabelFor(model => model.MenuOrder)', width: 150 },
                { field: 'visible', title: '@Html.LabelFor(model => model.IsVisible)', width: 150 },
                {
                    field: 'buttons', title: '操作',width: 250,
                    formatter: formatOperate
                }
            ]],
            onLoadSuccess: function(row, data) {
                if (data) {
                    $.each(data, function(index, item) {

                    });
                }
            }
        });
        function formatOperate(value, rowData, rowIndex) {
            var oper = "";
            if (rowData.buttons != null) {
                $.each(rowData.buttons, function (i, v) {
                    var content;
                    if (v.visible != "禁用") {
                        content = "  <input type='checkbox' checked='checked' class='{0}' id='{1}' disabled='disabled'/> {2}";
                    } else {
                        content = "  <input type='checkbox' class='{0}' id='{1}' disabled='disabled'/> {2}";
                    }
                    oper += content.format(rowData.id, v.id, v.text);
                    //console.log(v);
                    //console.log(rowData);
                    //console.log(rowIndex);
                });
            }
            return oper;
        }
        String.prototype.format = function (args) {
            var result = this;
            if (arguments.length > 0) {
                if (arguments.length == 1 && typeof (args) == "object") {
                    for (var key in args) {
                        if (args[key] != undefined) {
                            var reg = new RegExp("({" + key + "})", "g");
                            result = result.replace(reg, args[key]);
                        }
                    }
                } else {
                    for (var i = 0; i < arguments.length; i++) {
                        if (arguments[i] != undefined) {
                            //var reg = new RegExp("({[" + i + "]})", "g");//这个在索引大于9时会有问题，谢谢何以笙箫的指出
                            var reg = new RegExp("({)" + i + "(})", "g");
                            result = result.replace(reg, arguments[i]);
                        }
                    }
                }
            }
            return result;
        };

        //首先获取iframe标签的id值
        var iframeid = window.parent.$('#tabs').tabs('getSelected').find('iframe').attr("id");

        //获取按钮值
        $.getJSON('@Url.Action("GetCurrentUserButtonsPrivilege", "RestApi")' + "?" + new Date().getTime(), { menuId: iframeid }, function(data) {
            if (data == null) {
                return;
            }
            $('#fixedGrid').datagrid("addToolbarItem", data);
        });

        function NewItem() {
            $('#dlgNew').dialog('open').dialog('setTitle', '新增');
            $('#CreateForm').form("reset"); //要reset 一下，不然form会保存相应的值
        }

        function EditItem() {
            var row = $('#fixedGrid').datagrid('getSelected');
            if (row) {
                $('#dlgEdit').dialog('open').dialog('setTitle', '编辑');

                $('#UpdateForm').form("reset");
                $("#buttonsTD").empty();
                var id = row.id;
                //去读取数据库中的最新数据，防止多人编辑
                $.getJSON('@Url.Action("GetMenu", "RestApi")' + '/' + id + '?' + new Date().getTime(), function(data) {
                    if (data != null) {
                        $.each(data.Buttons, function (i, item) {
                            var content;
                            if (item.IsVisible != 0) {
                                content = "<input type='checkbox' checked='checked' id='" + item.SysId + "' value='" + item.SysId + "' />" + item.BtnName;

                            } else {
                                content = "<input type='checkbox' id='" + item.SysId + "' value='" + item.SysId + "' />" + item.BtnName;
                            }
                                    
                            $("#buttonsTD").append(content);
                        });
                        $('#UpdateForm').form('load', data);
                        //查询父ID，获得Name绑定到文本框中
                        if (data.MenuParentId != null) {
                            $.getJSON('@Url.Action("GetMenu", "RestApi")' + '/' + data.MenuParentId + '?' + new Date().getTime(), function(pData) {
                                if (pData != null) {
                                    $(".txtMenuId").val(pData.MenuName);
                                }
                            });
                        }
                    }
                });
            }
        }

        function DelItem() {
            var row = $('#fixedGrid').datagrid('getSelected');
            if (row) {
                $.messager.confirm('Confirm', '确定删除此记录?', function(r) {
                    if (r) {
                        $.post('@Url.Action("DeleteMenu", "RestApi")', { SysId: row.id }, function(result) {
                            if (result) {
                                $('#fixedGrid').treegrid("reload", {}); // 后台必须要跟花括号不然更新不成功
                            } else {
                                $.messager.show({
                                    // show error message
                                    title: 'Error',
                                    msg: result.errorMsg
                                });
                            }
                        }, 'json');
                    }
                });
            }
        }

    </script>

    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        function onAddSuccess(data) {
            if (data) {
                if (data.returnMessage == "Ajax_UnAuth") {
                    if (top.location != data.url)
                        top.location.href = data.url;
                } else {
                    $('#dlgNew').dialog('close');
                    $('#fixedGrid').treegrid('reload', {});
                }
            } else {
                alert("操作失败");
            }
        }

        function onEditSuccess(data) {
            if (data) {
                var disBtIds = "";
                var enBtIds = "";
                $("#dlgEdit input[type='checkbox']").each(function () {
                    if ($(this).attr("checked") == null) {
                        if (disBtIds != '')
                            disBtIds += ',';
                        disBtIds += $(this).attr('id');
                    } else {
                        if (enBtIds != '')
                            enBtIds += ',';
                        enBtIds += $(this).attr('id');
                    }
                });

                $.getJSON('@Url.Action("EnableMenuButton", "RestApi")' + "?" + new Date().getTime(), { 'enButtonIds': enBtIds, 'disButtonIds': disBtIds },
                    function (result) {
                        
                });

                $('#dlgEdit').dialog('close');
                $('#fixedGrid').treegrid('reload', {});
            } else {
                alert("操作失败");
            }
        }

        function GetSelectedMenu(row) {
            if (row) {
                $('.txtMenuId').val(row.text);
                $('.hiddenMenuId').val(row.id);
                $('#dlgSelectMenu').dialog('close');
            }
        }

    </script>
}





